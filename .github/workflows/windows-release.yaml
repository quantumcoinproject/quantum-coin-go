name: Windows Release

on:
  push:
    tags:
    - '*'    

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: true

      matrix:
        os: [windows-latest]
        build_type: [Release]

    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v4
      with:
       go-version: '^1.23.1'

    - name: Install Dependencies
      run: cd ${{ github.workspace }} && powershell ./install.ps1

    - name: Setup Environment Variables
      run: |
         dir ${{ github.workspace }}\templibs
         echo "${{ github.workspace }}\templibs\liboqs" >> $GITHUB_PATH
         echo "${{ github.workspace }}\templibs\hybrid-pqc" >> $GITHUB_PATH
         echo "${{ github.workspace }}\templibs\pkg-config\bin" >> $GITHUB_PATH
         echo "${{ github.workspace }}\templibs\mingw\mingw64\bin" >> $GITHUB_PATH
          
    - name: Build
      env:
        PKG_CONFIG_PATH: ${{ github.workspace }}\templibs\pkg-config
      run: |
         dir ${{ github.workspace }}\templibs\pkg-config
         echo $Env:Path
         echo $Env:PKG_CONFIG_PATH
         mkdir ${{ github.workspace }}\build && go build -o ${{ github.workspace }}\build ./...

    - name: Create Release
      env:
        PKG_CONFIG_PATH: ${{ github.workspace }}\templibs\pkg-config
      
      run: |
         echo ${{  github.ref_name }}
         mkdir ${{ github.workspace }}\build\dp
         copy ${{ github.workspace }}\build\dp.exe ${{ github.workspace }}\build\dp\dp.exe
         copy ${{ github.workspace }}\build\dputil.exe ${{ github.workspace }}\build\dp\dputil.exe
         copy ${{ github.workspace }}\build\relay.exe ${{ github.workspace }}\build\dp\relay.exe
         copy ${{ github.workspace }}\cmd\relay\config.json ${{ github.workspace }}\build\dp\config.json
         copy ${{ github.workspace }}\templibs\liboqs\oqs.dll ${{ github.workspace }}\build\dp\oqs.dll
         copy ${{ github.workspace }}\templibs\hybrid-pqc\hybridpqc.dll ${{ github.workspace }}\build\dp\hybridpqc.dll
         copy ${{ github.workspace }}\consensus\proofofstake\genesis\genesis.json ${{ github.workspace }}\build\dp\genesis.json
         copy ${{ github.workspace }}\resources\*.* ${{ github.workspace }}\build\dp\
         del ${{ github.workspace }}\build\dp\connect.sh
         del ${{ github.workspace }}\build\dp\connectvalidator.sh         
         powershell Compress-Archive ${{ github.workspace }}\build\dp ${{ github.workspace }}\build\dp-release-windows-${{  github.ref_name }}.zip
         powershell Get-FileHash ${{ github.workspace }}\build\dp-release-windows-${{  github.ref_name }}.zip > ${{ github.workspace }}\build\releasehash-windows-${{  github.ref_name }}.txt
         
    - name: 'Upload Artifact'
      uses: actions/upload-artifact@v4
      with:
        name: dp-release-windows
        path: |
              ${{ github.workspace }}/build/*.*
              
    - name: release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        artifacts: "build/*.zip,build/*.txt"
